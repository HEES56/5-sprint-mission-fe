@import "styles/reset.css";

  /* 기본 HTML 폰트 크기를 62.5%로 설정하여, 기본 16rem 대신 10rem이 기본 크기가 되도록 합니다.
  이로써 1rem = 10rem이 되어, REM 단위를 사용할 때 계산이 편리해집니다.. */
html {
  font-size: 62.5%;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  background: none;
  border: none;
  outline: none;
  box-shadow: none;
  cursor: pointer;
}

/* 
  - 이미지는 기본적으로 inline 요소로 취급되기 때문에 텍스트의 baseline에 맞춰서 정렬됩니다. 
    브라우저가 이미지를 텍스트와 같은 라인에 배치할 때 g, j, p 등 아래로 치우치는 알파벳의 descender 공간을 예약해 놓기 때문에 이미지와 주변 텍스트 사이에 의도하지 않은 작은 간격이 생기는 경우가 많습니다. 
    <img> 태그에 vertical-align: bottom;을 설정해 주면 이미지가 텍스트 라인의 가장 아래쪽에 맞춰서 정렬되어, 불필요한 공간 없이 배치할 수 있습니다.
  - 전역적으로 <img>의 display 유형을 inline이 아닌 block으로 바꿔 해당 이슈를 해결하는 경우도 있습니다.
*/
img {
  vertical-align: bottom;
}

body {
  color: #374151;
  word-break: keep-all; /* 띄어쓰기를 기준으로 줄바꿈하도록 설정하여 어절 기반의 한국어 특성에 적합한 읽기 편한 레이아웃을 제공 */
  font-family: "Pretendard", sans-serif;
}

/* 여러 요소가 나란히 배열되어 있을 때는 티가 나지 않아 보여도 항상 잊지 말고 display: flex; align-items: center;로 세로 중앙 정렬을 맞춰주세요. */
header {
  width: 100%;
  height: 7rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 20rem;
  background-color: #ffffff;
  border-bottom: 0.1rem solid #dfdfdf;
}

footer {
  background-color: #111827;
  color: #9ca3af;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 3.2rem 20rem 10.8rem 20rem;
  font-size: 1.6rem;
}

#footerMenu {
  display: flex;
  gap: 3rem;
  color: #e5e7eb;
}

#socialMedia {
  display: flex;
  gap: 1.2rem;
}

.wrapper {
  max-width: 120rem;
  margin: 0 auto;
  width: 100%;
}

h1 {
  font-size: 4rem;
  font-weight: 700;
  line-height: 5.6rem;
  letter-spacing: 0.02em;
}

.button {
  background-color: #3692ff;
  color: #ffffff;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* 
  가상 클래스(pseudo-class)를 사용해 특정 상태에 맞는 스타일을 적용하세요. 
  버튼 역할을 하는 요소에는 hover 또는 disabled 시의 스타일을 지정해 주는 것이 사용자 경험에 도움이 됩니다. 
*/
.button:hover {
  background-color: #1967d6;
}

.button:focus {
  background-color: #1251aa;
}

.button:disabled {
  background-color: #9ca3af;
  cursor: default;
  pointer-events: none;
}

/* 
 고정된 width나 height을 부여하는 것보다 내부 콘텐츠에 padding을 적용해서 요소의 전체 크기를 유동적으로 조정하는 방법이 반응형 웹 디자인과 접근성(accessibility) 측면에서 더 적합합니다.
*/
.pill-button {
  font-size: 2rem;
  font-weight: 700;
  border-radius: 99.9rem;
  padding: 1.6rem 12.4rem;
}

/* Media Queries */

/* Tablet */
@media (max-width: 1199px) {
  header {
    padding: 0 2.4rem;
  }
 
  .feature img {
    width: 36.4rem;
}
  footer {
    padding: 3.2rem 2.4rem 6rem 2.4rem;
  }
}

/* Mobile */
@media (max-width: 743px) {
  header {
    padding: 0 1.6rem;
  }
  .feature img {
    width: 50%;
    margin : 0 3.2rem;
}
  /* footer div {
    margin-bottom: 16px; /* footer 요소 간 간격 증가 */
  } */
}


